// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyMvcApp.Data;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MyMvcApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250419213821_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MissionPersonnel", b =>
                {
                    b.Property<string>("MissioncodesMissioncode")
                        .HasColumnType("text");

                    b.Property<int>("Personnelid")
                        .HasColumnType("integer");

                    b.HasKey("MissioncodesMissioncode", "Personnelid");

                    b.HasIndex("Personnelid");

                    b.ToTable("MissionPersonnel");
                });

            modelBuilder.Entity("MyMvcApp.Models.Mission", b =>
                {
                    b.Property<string>("Missioncode")
                        .HasColumnType("text");

                    b.Property<DateOnly?>("Missiondate")
                        .HasColumnType("date");

                    b.HasKey("Missioncode");

                    b.ToTable("Mission");
                });

            modelBuilder.Entity("MyMvcApp.Models.Personnel", b =>
                {
                    b.Property<int>("Personnelid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Personnelid"));

                    b.Property<string>("Bloodgroup")
                        .HasColumnType("text");

                    b.Property<string>("Contactnumber")
                        .HasColumnType("text");

                    b.Property<string>("Dutystatus")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("Emergencycontact")
                        .HasColumnType("text");

                    b.Property<DateOnly?>("Joiningdate")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Rank")
                        .HasColumnType("text");

                    b.Property<string>("Unitname")
                        .HasColumnType("text");

                    b.Property<string>("Weaponassigned")
                        .HasColumnType("text");

                    b.HasKey("Personnelid");

                    b.HasIndex("Unitname");

                    b.ToTable("Personnel");
                });

            modelBuilder.Entity("MyMvcApp.Models.Unit", b =>
                {
                    b.Property<string>("Unitname")
                        .HasColumnType("text");

                    b.Property<string>("Unitlocation")
                        .HasColumnType("text");

                    b.HasKey("Unitname");

                    b.ToTable("Unit");
                });

            modelBuilder.Entity("MissionPersonnel", b =>
                {
                    b.HasOne("MyMvcApp.Models.Mission", null)
                        .WithMany()
                        .HasForeignKey("MissioncodesMissioncode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyMvcApp.Models.Personnel", null)
                        .WithMany()
                        .HasForeignKey("Personnelid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MyMvcApp.Models.Personnel", b =>
                {
                    b.HasOne("MyMvcApp.Models.Unit", "UnitnameNavigation")
                        .WithMany("Personnel")
                        .HasForeignKey("Unitname");

                    b.Navigation("UnitnameNavigation");
                });

            modelBuilder.Entity("MyMvcApp.Models.Unit", b =>
                {
                    b.Navigation("Personnel");
                });
#pragma warning restore 612, 618
        }
    }
}
